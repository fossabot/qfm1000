name: Build and Tests
on:
  push:
    branches: [ master, staging, dev ]
  pull_request:
    branches: [ master, staging, dev ]
env:
  BUILD_TYPE: Release
jobs:
  build:
    name: Build and Tests
    runs-on: ubuntu-20.04
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Qt
        shell: bash
        run: sudo apt install qt5-default libqt5svg5-dev libqt5serialport5-dev
      - name: Downloading SonarQube Build Wrapper
        shell: bash
        working-directory: ${{runner.workspace}}
        run: wget "https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip" && unzip build-wrapper-linux-x86.zip && chmod 0755 build-wrapper-linux-x86/build-wrapper-linux-x86-64
      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build
      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ${{runner.workspace}}/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir ${{runner.workspace}}/qfm1000 cmake --build . --config $BUILD_TYPE
      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest -C $BUILD_TYPE
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
      - name: Send reports to CodeCov
        shell: bash
        run: bash <(curl -s https://codecov.io/bash)