name: Build and Test
on:
  push:
    branches: 
      - master
      - remake
  pull_request:
    branches:
      - master
      - remake
env:
  BUILD_TYPE: Release
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build_and_test_linux:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-18.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Install Qt"
        shell: bash
        run: sudo apt install qt5-default libqt5svg5-dev libqt5serialport5-dev
      - name: "Create Build Environment"
        run: cmake -E make_directory ${{runner.workspace}}/build
      - name: "Configure CMake"
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake ${{runner.workspace}}/qfm1000 -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      - name: "Build"
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE
      - name: "Test"
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest -C $BUILD_TYPE
      - name: "Send reports to CodeCov"
        uses: codecov/codecov-action@v1
  build_and_test_windows:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-2019
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Install Qt"
        uses: jurplel/install-qt-action@v2
        with:
          version: "5.15.2"
      - name: "Create Build Environment"
        run: cmake -E make_directory ${{runner.workspace}}\build
      - name: "Configure CMake"
        working-directory: ${{runner.workspace}}\build
        run: cmake ${{runner.workspace}}/qfm1000 -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DQT5_PREFIX="D:\a\qfm1000\Qt\5.15.2\msvc2019_64"
      - name: "Build"
        working-directory: ${{runner.workspace}}\build
        run: cmake --build . --config $BUILD_TYPE
      - name: "Test"
        working-directory: ${{runner.workspace}}\build
        run: ctest -C $BUILD_TYPE
      - name: "Send reports to CodeCov"
        uses: codecov/codecov-action@v1
  build_and_test_macos:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-10.15
          - macos-11.0
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Install Qt"
        uses: jurplel/install-qt-action@v2
        with:
          version: "5.15.2"
          arch: "clang_64"
      - name: "Create Build Environment"
        run: cmake -E make_directory ${{runner.workspace}}/build
      - name: "Configure CMake"
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake ${{runner.workspace}}/qfm1000 -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      - name: "Build"
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE
      - name: "Test"
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest -C $BUILD_TYPE
      - name: "Send reports to CodeCov"
        uses: codecov/codecov-action@v1
